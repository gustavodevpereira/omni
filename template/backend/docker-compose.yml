version: '3.8'

services:
  webapi:
    container_name: ambev_backend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081
      - ASPNETCORE_URLS=http://+:8080;https://+:8081
    depends_on:
      - database
      - nosql
      - cache
      - messagebroker

  database:
    container_name: ambev_database
    image: postgres:13
    environment:
      POSTGRES_DB: developer_evaluation
      POSTGRES_USER: developer
      POSTGRES_PASSWORD: ev@luAt10n
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nosql:
    container_name: ambev_nosql 
    image: mongo:8.0    
    environment:
        MONGO_INITDB_ROOT_USERNAME: developer
        MONGO_INITDB_ROOT_PASSWORD: ev@luAt10n
    ports:
      - "27017:27017"

  cache:
    container_name: ambev_cache
    image: redis:7.4.1-alpine
    command: redis-server --requirepass ev@luAt10n
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  messagebroker:
    container_name: ambev_messagebroker
    image: rabbitmq:3.12-management
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: developer
      RABBITMQ_DEFAULT_PASS: ev@luAt10n
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data: 