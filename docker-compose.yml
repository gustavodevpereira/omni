version: '3.8'

services:
  # Backend Services
  ambev.developerevaluation.webapi:
    container_name: ambev_developer_evaluation_webapi
    image: ${DOCKER_REGISTRY-}ambevdeveloperevaluationwebapi
    build:
      context: ./template/backend
      dockerfile: src/Ambev.DeveloperEvaluation.WebApi/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      - ambev.developerevaluation.database
      - ambev.developerevaluation.cache
      - ambev.developerevaluation.messagebroker
    networks:
      - ambev-evaluation-network
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ASPNETCORE_HTTPS_PORTS=8081

  ambev.developerevaluation.database:
    container_name: ambev_developer_evaluation_database
    image: postgres:13
    environment:
      POSTGRES_DB: developer_evaluation
      POSTGRES_USER: developer
      POSTGRES_PASSWORD: ev@luAt10n
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ambev-evaluation-network

  ambev.developerevaluation.nosql:
    container_name: ambev_developer_evaluation_nosql 
    image: mongo:8.0    
    environment:
        MONGO_INITDB_ROOT_USERNAME: developer
        MONGO_INITDB_ROOT_PASSWORD: ev@luAt10n
    ports:
      - "27017:27017"
    networks:
      - ambev-evaluation-network

  ambev.developerevaluation.cache:
    container_name: ambev_developer_evaluation_cache
    image: redis:7.4.1-alpine
    command: redis-server --requirepass ev@luAt10n
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ambev-evaluation-network

  ambev.developerevaluation.messagebroker:
    container_name: ambev_developer_evaluation_messagebroker
    image: rabbitmq:3.12-management
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: developer
      RABBITMQ_DEFAULT_PASS: ev@luAt10n
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ambev-evaluation-network

  # Frontend Service
  ambev.developerevaluation.frontend:
    container_name: ambev_developer_evaluation_frontend
    build:
      context: ./template/frontend
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    depends_on:
      - ambev.developerevaluation.webapi
    networks:
      - ambev-evaluation-network

networks:
  ambev-evaluation-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data: 